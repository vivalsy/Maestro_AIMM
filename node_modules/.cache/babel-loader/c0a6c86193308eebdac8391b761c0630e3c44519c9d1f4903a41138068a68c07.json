{"ast":null,"code":"var _jsxFileName = \"D:\\\\Maestro_AI\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport Header from './components/Header';\nimport ActionButtons from './components/ActionButtons';\nimport MeetingTable from './components/MeetingTable';\nimport DistributeButton from './components/DistributeButton';\nimport MeetingRegistrationModal from './components/MeetingRegistrationModal';\nimport MeetingRecordingModal from './components/MeetingRecordingModal';\nimport EmailDistributionModal from './components/EmailDistributionModal';\nimport { meetings as initialMeetings } from './data/meetings';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [meetings, setMeetings] = useState([]); // 빈 배열로 시작\n  const [filteredMeetings, setFilteredMeetings] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedMeetings, setSelectedMeetings] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingMeeting, setEditingMeeting] = useState(null);\n  const [isEmailModalOpen, setIsEmailModalOpen] = useState(false);\n  const [emailMeeting, setEmailMeeting] = useState(null);\n  const [webexConnecting, setWebexConnecting] = useState(null); // WebEx 연결 중인 회의 ID\n\n  // 초기 데이터 로드\n  useEffect(() => {\n    setMeetings(initialMeetings);\n  }, []);\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredMeetings(meetings);\n    } else {\n      const filtered = meetings.filter(meeting => meeting.name.toLowerCase().includes(searchQuery.toLowerCase()) || meeting.organizer.name.toLowerCase().includes(searchQuery.toLowerCase()));\n      setFilteredMeetings(filtered);\n    }\n  }, [searchQuery, meetings]);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const handleNewMeeting = () => {\n    setEditingMeeting(null); // 새 회의 등록 모드\n    setIsModalOpen(true);\n  };\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setEditingMeeting(null); // 편집 상태 초기화\n  };\n  const handleMeetingEdit = meeting => {\n    setEditingMeeting(meeting); // 편집할 회의 설정\n    setIsModalOpen(true);\n  };\n  const handleModalSave = meetingData => {\n    // 날짜와 시간을 결합하여 DateTime 객체 생성\n    const startTime = new Date(`${meetingData.date}T${meetingData.startTime}:00`);\n    const endTime = new Date(`${meetingData.date}T${meetingData.endTime}:00`);\n    if (editingMeeting) {\n      // 편집 모드: 기존 회의 업데이트\n      const updatedMeeting = {\n        ...editingMeeting,\n        name: meetingData.meetingName,\n        date: meetingData.date,\n        time: `${meetingData.startTime}~${meetingData.endTime}`,\n        startDateTime: startTime,\n        endDateTime: endTime,\n        location: meetingData.location || '장소 미정',\n        organizer: {\n          name: meetingData.organizer || '주관자 미정',\n          title: '주관자'\n        },\n        attendees: meetingData.attendees ? meetingData.attendees.split(',').map(name => name.trim()) : [],\n        totalAttendees: meetingData.attendees ? meetingData.attendees.split(',').length + 1 : 1,\n        webexUrl: meetingData.webexUrl && meetingData.webexUrl.trim() !== '' ? meetingData.webexUrl : undefined,\n        agendaItems: meetingData.agendaItems || editingMeeting.agendaItems,\n        meetingScript: editingMeeting.meetingScript,\n        minutesContent: editingMeeting.minutesContent\n      };\n      setMeetings(prev => prev.map(meeting => meeting.id === editingMeeting.id ? updatedMeeting : meeting));\n      console.log('회의 수정:', updatedMeeting);\n      window.alert('회의가 성공적으로 수정되었습니다.');\n    } else {\n      // 새 회의 등록 모드\n      const newMeeting = {\n        id: Date.now().toString(),\n        // 고유 ID 생성\n        name: meetingData.meetingName,\n        date: meetingData.date,\n        time: `${meetingData.startTime}~${meetingData.endTime}`,\n        startDateTime: startTime,\n        endDateTime: endTime,\n        location: meetingData.location || '장소 미정',\n        organizer: {\n          name: meetingData.organizer || '주관자 미정',\n          title: '주관자'\n        },\n        attendees: meetingData.attendees ? meetingData.attendees.split(',').map(name => name.trim()) : [],\n        totalAttendees: meetingData.attendees ? meetingData.attendees.split(',').length + 1 : 1,\n        // 주관자 포함\n        webexUrl: meetingData.webexUrl && meetingData.webexUrl.trim() !== '' ? meetingData.webexUrl : undefined,\n        status: 'scheduled',\n        minutesStatus: 'write',\n        hasLiveRecording: false,\n        agendaItems: meetingData.agendaItems || [],\n        meetingScript: '',\n        minutesContent: ''\n      };\n\n      // 새로운 회의를 목록에 추가\n      setMeetings(prev => [...prev, newMeeting]);\n      console.log('새 회의 등록:', newMeeting);\n      window.alert('회의가 성공적으로 등록되었습니다.');\n    }\n    setIsModalOpen(false);\n    setEditingMeeting(null);\n  };\n  const handleWebexJoin = meeting => {\n    if (meeting.webexUrl) {\n      try {\n        // 연결 상태 설정\n        setWebexConnecting(meeting.id);\n\n        // WebEx URL 유효성 검사 및 정규화\n        let webexUrl = meeting.webexUrl.trim();\n\n        // URL이 http:// 또는 https://로 시작하지 않으면 https:// 추가\n        if (!webexUrl.startsWith('http://') && !webexUrl.startsWith('https://')) {\n          webexUrl = 'https://' + webexUrl;\n        }\n\n        // WebEx URL 패턴 검증\n        const webexPatterns = [/webex\\.com/i, /meet\\.webex\\.com/i, /teams\\.webex\\.com/i, /webex\\.teams\\.com/i];\n        const isValidWebexUrl = webexPatterns.some(pattern => pattern.test(webexUrl));\n        if (!isValidWebexUrl) {\n          console.warn('WebEx URL 형식이 아닙니다:', webexUrl);\n          // 경고하지만 연결 시도\n        }\n\n        // 새 창에서 WebEx 연결\n        const newWindow = window.open(webexUrl, '_blank', 'noopener,noreferrer');\n        if (newWindow) {\n          // 연결 성공 로그\n          console.log('WebEx 연결 시도:', {\n            meeting: meeting.name,\n            url: webexUrl,\n            timestamp: new Date().toISOString()\n          });\n\n          // 연결 상태 확인 (선택적)\n          setTimeout(() => {\n            if (newWindow.closed) {\n              console.log('WebEx 창이 닫혔습니다.');\n            }\n            // 연결 상태 초기화\n            setWebexConnecting(null);\n          }, 5000);\n        } else {\n          // 팝업 차단된 경우\n          window.alert('팝업이 차단되었습니다. 브라우저 설정에서 팝업을 허용해주세요.');\n\n          // 대안: 현재 창에서 열기\n          const useCurrentWindow = window.confirm('팝업이 차단되었습니다. 현재 창에서 WebEx를 열시겠습니까?');\n          if (useCurrentWindow) {\n            window.location.href = webexUrl;\n          }\n\n          // 연결 상태 초기화\n          setWebexConnecting(null);\n        }\n      } catch (error) {\n        console.error('WebEx 연결 오류:', error);\n        const errorMessage = error instanceof Error ? error.message : '알 수 없는 오류';\n        alert(`WebEx 연결 중 오류가 발생했습니다: ${errorMessage}`);\n\n        // 연결 상태 초기화\n        setWebexConnecting(null);\n      }\n    } else {\n      // WebEx URL이 없는 경우\n      const addWebexUrl = window.confirm(`${meeting.name} 회의에 WebEx 링크가 없습니다.\\n\\n회의 정보를 편집하여 WebEx 링크를 추가하시겠습니까?`);\n      if (addWebexUrl) {\n        // 회의 편집 모달 열기\n        handleMeetingEdit(meeting);\n      }\n    }\n  };\n  const [showRecordingModal, setShowRecordingModal] = useState(false);\n  const [currentMeeting, setCurrentMeeting] = useState(null);\n  const handleMinutesAction = meeting => {\n    if (meeting.minutesStatus === 'write') {\n      setCurrentMeeting(meeting);\n      setShowRecordingModal(true);\n    } else {\n      alert(`${meeting.name} 회의록 보기 기능이 구현됩니다.`);\n    }\n  };\n  const handleMinutesFileClick = meeting => {\n    if (meeting.minutesFile) {\n      // 회의록 내용을 다시 PDF로 생성하여 다운로드\n      const doc = new jsPDF();\n\n      // 한글 폰트 설정\n      doc.setFont('helvetica');\n      doc.setFontSize(16);\n\n      // 제목\n      doc.text('Meeting Minutes', 105, 20, {\n        align: 'center'\n      });\n\n      // 회의 기본 정보\n      doc.setFontSize(12);\n      const meetingTitle = `Meeting Title: ${meeting.name}`;\n      const meetingDate = `Date: ${meeting.date} ${meeting.time}`;\n      const meetingLocation = `Location: ${meeting.location}`;\n      const meetingAttendees = `Attendees: ${meeting.attendees.join(', ')}`;\n      doc.text(meetingTitle, 20, 40);\n      doc.text(meetingDate, 20, 50);\n      doc.text(meetingLocation, 20, 60);\n      doc.text(meetingAttendees, 20, 70);\n\n      // 회의록 내용이 있으면 추가\n      if (meeting.minutesContent) {\n        doc.setFontSize(12);\n        doc.setFont('helvetica', 'bold');\n        doc.text('회의록 상세 내용', 20, 90);\n\n        // 회의록 내용을 파싱하여 테이블 형식으로 표시\n        const minutesLines = meeting.minutesContent.split('\\n');\n        let yPosition = 110;\n        minutesLines.forEach((line, index) => {\n          if (line.trim()) {\n            const lines = doc.splitTextToSize(line, 170);\n            if (yPosition + lines.length * 5 > 280) {\n              doc.addPage();\n              yPosition = 20;\n            }\n            doc.setFont('helvetica', 'normal');\n            doc.setFontSize(10);\n            doc.text(lines, 20, yPosition);\n            yPosition += lines.length * 5 + 5;\n          }\n        });\n      }\n\n      // PDF 다운로드\n      doc.save(meeting.minutesFile);\n      console.log('회의록 파일 다운로드:', meeting.minutesFile);\n    }\n  };\n\n  // 이메일 배포 핸들러\n  const handleEmailDistribute = meeting => {\n    setEmailMeeting(meeting);\n    setIsEmailModalOpen(true);\n  };\n  const handleEmailModalClose = () => {\n    setIsEmailModalOpen(false);\n    setEmailMeeting(null);\n  };\n  const handleSendEmail = (meeting, emailData) => {\n    // 실제 이메일 발송 로직은 서버 API를 통해 구현해야 합니다\n    console.log('이메일 발송:', {\n      meeting: meeting.name,\n      recipients: emailData.recipients,\n      subject: emailData.subject,\n      message: emailData.message,\n      includeMinutes: emailData.includeMinutes,\n      includeAttachments: emailData.includeAttachments\n    });\n\n    // 이메일 배포 완료 상태로 업데이트\n    setMeetings(prev => prev.map(m => m.id === meeting.id ? {\n      ...m,\n      emailDistributed: true\n    } : m));\n\n    // 성공 메시지 표시\n    alert(`${meeting.name} 회의록이 성공적으로 이메일로 발송되었습니다.\\n\\n수신자: ${emailData.recipients.join(', ')}\\n제목: ${emailData.subject}`);\n  };\n\n  // 회의록 내보내기 처리\n  const handleExportMinutes = (meetingName, minutesContent, fileName) => {\n    // 해당 회의를 찾아서 회의록 파일명을 추가하고 상태를 'view'로 변경\n    setMeetings(prev => prev.map(meeting => meeting.name === meetingName ? {\n      ...meeting,\n      minutesStatus: 'view',\n      minutesContent,\n      minutesFile: fileName\n    } : meeting));\n    console.log('회의록 파일 추가:', fileName);\n  };\n  const handleMeetingSelect = (meetingId, isSelected) => {\n    if (isSelected) {\n      setSelectedMeetings(prev => [...prev, meetingId]);\n    } else {\n      setSelectedMeetings(prev => prev.filter(id => id !== meetingId));\n    }\n  };\n\n  // 회의 삭제 기능\n  const handleDelete = () => {\n    const selectedMeetingNames = filteredMeetings.filter(meeting => selectedMeetings.includes(meeting.id)).map(meeting => meeting.name);\n    const confirmDelete = window.confirm(`선택된 회의를 삭제하시겠습니까?\\n\\n${selectedMeetingNames.join('\\n')}\\n\\n이 작업은 되돌릴 수 없습니다.`);\n    if (confirmDelete) {\n      // 선택된 회의들을 제거\n      setMeetings(prev => prev.filter(meeting => !selectedMeetings.includes(meeting.id)));\n      alert(`선택된 회의가 삭제되었습니다:\\n${selectedMeetingNames.join('\\n')}`);\n\n      // 선택 해제\n      setSelectedMeetings([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n      totalMeetings: meetings.length,\n      onNewMeeting: handleNewMeeting,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetingTable, {\n      meetings: filteredMeetings,\n      selectedMeetings: selectedMeetings,\n      onMeetingSelect: handleMeetingSelect,\n      onWebexJoin: handleWebexJoin,\n      onMinutesAction: handleMinutesAction,\n      onMeetingEdit: handleMeetingEdit,\n      onMinutesFileClick: handleMinutesFileClick,\n      onEmailDistribute: handleEmailDistribute,\n      webexConnecting: webexConnecting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DistributeButton, {\n      selectedCount: selectedMeetings.length,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetingRegistrationModal, {\n      isOpen: isModalOpen,\n      onClose: handleModalClose,\n      onSave: handleModalSave,\n      editingMeeting: editingMeeting,\n      onExportMinutes: handleExportMinutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), currentMeeting && /*#__PURE__*/_jsxDEV(MeetingRecordingModal, {\n      isOpen: showRecordingModal,\n      onClose: () => {\n        setShowRecordingModal(false);\n        setCurrentMeeting(null);\n      },\n      meetingName: currentMeeting.name,\n      agendaItems: currentMeeting.agendaItems || [],\n      existingScript: currentMeeting.meetingScript,\n      existingMinutes: currentMeeting.minutesContent,\n      meetingInfo: {\n        date: currentMeeting.date,\n        time: currentMeeting.time,\n        location: currentMeeting.location,\n        organizer: currentMeeting.organizer.name,\n        attendees: currentMeeting.attendees\n      },\n      onExportMinutes: handleExportMinutes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EmailDistributionModal, {\n      isOpen: isEmailModalOpen,\n      onClose: handleEmailModalClose,\n      meeting: emailMeeting,\n      onSendEmail: handleSendEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8CTVA8Ydo56nCoT5U/YJulioMKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","Header","ActionButtons","MeetingTable","DistributeButton","MeetingRegistrationModal","MeetingRecordingModal","EmailDistributionModal","meetings","initialMeetings","jsxDEV","_jsxDEV","App","_s","setMeetings","filteredMeetings","setFilteredMeetings","searchQuery","setSearchQuery","selectedMeetings","setSelectedMeetings","isModalOpen","setIsModalOpen","editingMeeting","setEditingMeeting","isEmailModalOpen","setIsEmailModalOpen","emailMeeting","setEmailMeeting","webexConnecting","setWebexConnecting","trim","filtered","filter","meeting","name","toLowerCase","includes","organizer","handleSearch","query","handleNewMeeting","handleModalClose","handleMeetingEdit","handleModalSave","meetingData","startTime","Date","date","endTime","updatedMeeting","meetingName","time","startDateTime","endDateTime","location","title","attendees","split","map","totalAttendees","length","webexUrl","undefined","agendaItems","meetingScript","minutesContent","prev","id","console","log","window","alert","newMeeting","now","toString","status","minutesStatus","hasLiveRecording","handleWebexJoin","startsWith","webexPatterns","isValidWebexUrl","some","pattern","test","warn","newWindow","open","url","timestamp","toISOString","setTimeout","closed","useCurrentWindow","confirm","href","error","errorMessage","Error","message","addWebexUrl","showRecordingModal","setShowRecordingModal","currentMeeting","setCurrentMeeting","handleMinutesAction","handleMinutesFileClick","minutesFile","doc","setFont","setFontSize","text","align","meetingTitle","meetingDate","meetingLocation","meetingAttendees","join","minutesLines","yPosition","forEach","line","index","lines","splitTextToSize","addPage","save","handleEmailDistribute","handleEmailModalClose","handleSendEmail","emailData","recipients","subject","includeMinutes","includeAttachments","m","emailDistributed","handleExportMinutes","fileName","handleMeetingSelect","meetingId","isSelected","handleDelete","selectedMeetingNames","confirmDelete","className","children","_jsxFileName","lineNumber","columnNumber","totalMeetings","onNewMeeting","onSearch","onMeetingSelect","onWebexJoin","onMinutesAction","onMeetingEdit","onMinutesFileClick","onEmailDistribute","selectedCount","onDelete","isOpen","onClose","onSave","onExportMinutes","existingScript","existingMinutes","meetingInfo","onSendEmail","_c","$RefreshReg$"],"sources":["D:/Maestro_AI/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport Header from './components/Header';\nimport ActionButtons from './components/ActionButtons';\nimport MeetingTable from './components/MeetingTable';\nimport DistributeButton from './components/DistributeButton';\nimport MeetingRegistrationModal from './components/MeetingRegistrationModal';\nimport MeetingRecordingModal from './components/MeetingRecordingModal';\nimport EmailDistributionModal, { EmailData } from './components/EmailDistributionModal';\nimport { Meeting } from './types/Meeting';\nimport { meetings as initialMeetings } from './data/meetings';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [meetings, setMeetings] = useState<Meeting[]>([]); // 빈 배열로 시작\n  const [filteredMeetings, setFilteredMeetings] = useState<Meeting[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedMeetings, setSelectedMeetings] = useState<string[]>([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingMeeting, setEditingMeeting] = useState<Meeting | null>(null);\n  const [isEmailModalOpen, setIsEmailModalOpen] = useState(false);\n  const [emailMeeting, setEmailMeeting] = useState<Meeting | null>(null);\n  const [webexConnecting, setWebexConnecting] = useState<string | null>(null); // WebEx 연결 중인 회의 ID\n\n  // 초기 데이터 로드\n  useEffect(() => {\n    setMeetings(initialMeetings);\n  }, []);\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredMeetings(meetings);\n    } else {\n      const filtered = meetings.filter(meeting => \n        meeting.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        meeting.organizer.name.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n      setFilteredMeetings(filtered);\n    }\n  }, [searchQuery, meetings]);\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n  };\n\n  const handleNewMeeting = () => {\n    setEditingMeeting(null); // 새 회의 등록 모드\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setEditingMeeting(null); // 편집 상태 초기화\n  };\n\n  const handleMeetingEdit = (meeting: Meeting) => {\n    setEditingMeeting(meeting); // 편집할 회의 설정\n    setIsModalOpen(true);\n  };\n\n  const handleModalSave = (meetingData: any) => {\n    // 날짜와 시간을 결합하여 DateTime 객체 생성\n    const startTime = new Date(`${meetingData.date}T${meetingData.startTime}:00`);\n    const endTime = new Date(`${meetingData.date}T${meetingData.endTime}:00`);\n    \n    if (editingMeeting) {\n      // 편집 모드: 기존 회의 업데이트\n      const updatedMeeting: Meeting = {\n        ...editingMeeting,\n        name: meetingData.meetingName,\n        date: meetingData.date,\n        time: `${meetingData.startTime}~${meetingData.endTime}`,\n        startDateTime: startTime,\n        endDateTime: endTime,\n        location: meetingData.location || '장소 미정',\n        organizer: {\n          name: meetingData.organizer || '주관자 미정',\n          title: '주관자'\n        },\n        attendees: meetingData.attendees ? meetingData.attendees.split(',').map((name: string) => name.trim()) : [],\n        totalAttendees: meetingData.attendees ? meetingData.attendees.split(',').length + 1 : 1,\n        webexUrl: meetingData.webexUrl && meetingData.webexUrl.trim() !== '' ? meetingData.webexUrl : undefined,\n        agendaItems: meetingData.agendaItems || editingMeeting.agendaItems,\n        meetingScript: editingMeeting.meetingScript,\n        minutesContent: editingMeeting.minutesContent\n      };\n\n      setMeetings(prev => prev.map(meeting => \n        meeting.id === editingMeeting.id ? updatedMeeting : meeting\n      ));\n      \n      console.log('회의 수정:', updatedMeeting);\n      window.alert('회의가 성공적으로 수정되었습니다.');\n    } else {\n      // 새 회의 등록 모드\n      const newMeeting: Meeting = {\n        id: Date.now().toString(), // 고유 ID 생성\n        name: meetingData.meetingName,\n        date: meetingData.date,\n        time: `${meetingData.startTime}~${meetingData.endTime}`,\n        startDateTime: startTime,\n        endDateTime: endTime,\n        location: meetingData.location || '장소 미정',\n        organizer: {\n          name: meetingData.organizer || '주관자 미정',\n          title: '주관자'\n        },\n        attendees: meetingData.attendees ? meetingData.attendees.split(',').map((name: string) => name.trim()) : [],\n        totalAttendees: meetingData.attendees ? meetingData.attendees.split(',').length + 1 : 1, // 주관자 포함\n        webexUrl: meetingData.webexUrl && meetingData.webexUrl.trim() !== '' ? meetingData.webexUrl : undefined,\n        status: 'scheduled',\n        minutesStatus: 'write',\n        hasLiveRecording: false,\n        agendaItems: meetingData.agendaItems || [],\n        meetingScript: '',\n        minutesContent: ''\n      };\n\n      // 새로운 회의를 목록에 추가\n      setMeetings(prev => [...prev, newMeeting]);\n      \n      console.log('새 회의 등록:', newMeeting);\n      window.alert('회의가 성공적으로 등록되었습니다.');\n    }\n    \n    setIsModalOpen(false);\n    setEditingMeeting(null);\n  };\n\n  const handleWebexJoin = (meeting: Meeting) => {\n    if (meeting.webexUrl) {\n      try {\n        // 연결 상태 설정\n        setWebexConnecting(meeting.id);\n        \n        // WebEx URL 유효성 검사 및 정규화\n        let webexUrl = meeting.webexUrl.trim();\n        \n        // URL이 http:// 또는 https://로 시작하지 않으면 https:// 추가\n        if (!webexUrl.startsWith('http://') && !webexUrl.startsWith('https://')) {\n          webexUrl = 'https://' + webexUrl;\n        }\n        \n        // WebEx URL 패턴 검증\n        const webexPatterns = [\n          /webex\\.com/i,\n          /meet\\.webex\\.com/i,\n          /teams\\.webex\\.com/i,\n          /webex\\.teams\\.com/i\n        ];\n        \n        const isValidWebexUrl = webexPatterns.some(pattern => pattern.test(webexUrl));\n        \n        if (!isValidWebexUrl) {\n          console.warn('WebEx URL 형식이 아닙니다:', webexUrl);\n          // 경고하지만 연결 시도\n        }\n        \n        // 새 창에서 WebEx 연결\n        const newWindow = window.open(webexUrl, '_blank', 'noopener,noreferrer');\n        \n        if (newWindow) {\n          // 연결 성공 로그\n          console.log('WebEx 연결 시도:', {\n            meeting: meeting.name,\n            url: webexUrl,\n            timestamp: new Date().toISOString()\n          });\n          \n          // 연결 상태 확인 (선택적)\n          setTimeout(() => {\n            if (newWindow.closed) {\n              console.log('WebEx 창이 닫혔습니다.');\n            }\n            // 연결 상태 초기화\n            setWebexConnecting(null);\n          }, 5000);\n          \n        } else {\n          // 팝업 차단된 경우\n          window.alert('팝업이 차단되었습니다. 브라우저 설정에서 팝업을 허용해주세요.');\n          \n          // 대안: 현재 창에서 열기\n          const useCurrentWindow = window.confirm('팝업이 차단되었습니다. 현재 창에서 WebEx를 열시겠습니까?');\n          if (useCurrentWindow) {\n            window.location.href = webexUrl;\n          }\n          \n          // 연결 상태 초기화\n          setWebexConnecting(null);\n        }\n        \n      } catch (error) {\n        console.error('WebEx 연결 오류:', error);\n        const errorMessage = error instanceof Error ? error.message : '알 수 없는 오류';\n        alert(`WebEx 연결 중 오류가 발생했습니다: ${errorMessage}`);\n        \n        // 연결 상태 초기화\n        setWebexConnecting(null);\n      }\n    } else {\n      // WebEx URL이 없는 경우\n      const addWebexUrl = window.confirm(\n        `${meeting.name} 회의에 WebEx 링크가 없습니다.\\n\\n회의 정보를 편집하여 WebEx 링크를 추가하시겠습니까?`\n      );\n      \n      if (addWebexUrl) {\n        // 회의 편집 모달 열기\n        handleMeetingEdit(meeting);\n      }\n    }\n  };\n\n  const [showRecordingModal, setShowRecordingModal] = useState(false);\n  const [currentMeeting, setCurrentMeeting] = useState<Meeting | null>(null);\n\n  const handleMinutesAction = (meeting: Meeting) => {\n    if (meeting.minutesStatus === 'write') {\n      setCurrentMeeting(meeting);\n      setShowRecordingModal(true);\n    } else {\n      alert(`${meeting.name} 회의록 보기 기능이 구현됩니다.`);\n    }\n  };\n\n  const handleMinutesFileClick = (meeting: Meeting) => {\n    if (meeting.minutesFile) {\n      // 회의록 내용을 다시 PDF로 생성하여 다운로드\n      const doc = new jsPDF();\n      \n      // 한글 폰트 설정\n      doc.setFont('helvetica');\n      doc.setFontSize(16);\n      \n      // 제목\n      doc.text('Meeting Minutes', 105, 20, { align: 'center' });\n      \n      // 회의 기본 정보\n      doc.setFontSize(12);\n      const meetingTitle = `Meeting Title: ${meeting.name}`;\n      const meetingDate = `Date: ${meeting.date} ${meeting.time}`;\n      const meetingLocation = `Location: ${meeting.location}`;\n      const meetingAttendees = `Attendees: ${meeting.attendees.join(', ')}`;\n      \n      doc.text(meetingTitle, 20, 40);\n      doc.text(meetingDate, 20, 50);\n      doc.text(meetingLocation, 20, 60);\n      doc.text(meetingAttendees, 20, 70);\n      \n      // 회의록 내용이 있으면 추가\n      if (meeting.minutesContent) {\n        doc.setFontSize(12);\n        doc.setFont('helvetica', 'bold');\n        doc.text('회의록 상세 내용', 20, 90);\n        \n        // 회의록 내용을 파싱하여 테이블 형식으로 표시\n        const minutesLines = meeting.minutesContent.split('\\n');\n        let yPosition = 110;\n        \n        minutesLines.forEach((line, index) => {\n          if (line.trim()) {\n            const lines = doc.splitTextToSize(line, 170);\n            \n            if (yPosition + lines.length * 5 > 280) {\n              doc.addPage();\n              yPosition = 20;\n            }\n            \n            doc.setFont('helvetica', 'normal');\n            doc.setFontSize(10);\n            doc.text(lines, 20, yPosition);\n            yPosition += lines.length * 5 + 5;\n          }\n        });\n      }\n      \n      // PDF 다운로드\n      doc.save(meeting.minutesFile);\n      \n      console.log('회의록 파일 다운로드:', meeting.minutesFile);\n    }\n  };\n\n  // 이메일 배포 핸들러\n  const handleEmailDistribute = (meeting: Meeting) => {\n    setEmailMeeting(meeting);\n    setIsEmailModalOpen(true);\n  };\n\n  const handleEmailModalClose = () => {\n    setIsEmailModalOpen(false);\n    setEmailMeeting(null);\n  };\n\n  const handleSendEmail = (meeting: Meeting, emailData: EmailData) => {\n    // 실제 이메일 발송 로직은 서버 API를 통해 구현해야 합니다\n    console.log('이메일 발송:', {\n      meeting: meeting.name,\n      recipients: emailData.recipients,\n      subject: emailData.subject,\n      message: emailData.message,\n      includeMinutes: emailData.includeMinutes,\n      includeAttachments: emailData.includeAttachments\n    });\n\n    // 이메일 배포 완료 상태로 업데이트\n    setMeetings(prev => prev.map(m => \n      m.id === meeting.id \n        ? { ...m, emailDistributed: true }\n        : m\n    ));\n\n    // 성공 메시지 표시\n    alert(`${meeting.name} 회의록이 성공적으로 이메일로 발송되었습니다.\\n\\n수신자: ${emailData.recipients.join(', ')}\\n제목: ${emailData.subject}`);\n  };\n\n  // 회의록 내보내기 처리\n  const handleExportMinutes = (meetingName: string, minutesContent: string, fileName: string) => {\n    // 해당 회의를 찾아서 회의록 파일명을 추가하고 상태를 'view'로 변경\n    setMeetings(prev => prev.map(meeting => \n      meeting.name === meetingName \n        ? { ...meeting, minutesStatus: 'view' as const, minutesContent, minutesFile: fileName }\n        : meeting\n    ));\n    \n    console.log('회의록 파일 추가:', fileName);\n  };\n\n  const handleMeetingSelect = (meetingId: string, isSelected: boolean) => {\n    if (isSelected) {\n      setSelectedMeetings(prev => [...prev, meetingId]);\n    } else {\n      setSelectedMeetings(prev => prev.filter(id => id !== meetingId));\n    }\n  };\n\n\n\n  // 회의 삭제 기능\n  const handleDelete = () => {\n    const selectedMeetingNames = filteredMeetings\n      .filter(meeting => selectedMeetings.includes(meeting.id))\n      .map(meeting => meeting.name);\n    \n    const confirmDelete = window.confirm(\n      `선택된 회의를 삭제하시겠습니까?\\n\\n${selectedMeetingNames.join('\\n')}\\n\\n이 작업은 되돌릴 수 없습니다.`\n    );\n    \n    if (confirmDelete) {\n      // 선택된 회의들을 제거\n      setMeetings(prev => prev.filter(meeting => !selectedMeetings.includes(meeting.id)));\n      \n      alert(`선택된 회의가 삭제되었습니다:\\n${selectedMeetingNames.join('\\n')}`);\n      \n      // 선택 해제\n      setSelectedMeetings([]);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <ActionButtons \n        totalMeetings={meetings.length}\n        onNewMeeting={handleNewMeeting}\n        onSearch={handleSearch}\n      />\n      <MeetingTable \n        meetings={filteredMeetings}\n        selectedMeetings={selectedMeetings}\n        onMeetingSelect={handleMeetingSelect}\n        onWebexJoin={handleWebexJoin}\n        onMinutesAction={handleMinutesAction}\n        onMeetingEdit={handleMeetingEdit}\n        onMinutesFileClick={handleMinutesFileClick}\n        onEmailDistribute={handleEmailDistribute}\n        webexConnecting={webexConnecting}\n      />\n      <DistributeButton \n        selectedCount={selectedMeetings.length}\n        onDelete={handleDelete}\n      />\n      <MeetingRegistrationModal\n        isOpen={isModalOpen}\n        onClose={handleModalClose}\n        onSave={handleModalSave}\n        editingMeeting={editingMeeting}\n        onExportMinutes={handleExportMinutes}\n      />\n      {currentMeeting && (\n        <MeetingRecordingModal\n          isOpen={showRecordingModal}\n          onClose={() => {\n            setShowRecordingModal(false);\n            setCurrentMeeting(null);\n          }}\n          meetingName={currentMeeting.name}\n          agendaItems={currentMeeting.agendaItems || []}\n          existingScript={currentMeeting.meetingScript}\n          existingMinutes={currentMeeting.minutesContent}\n          meetingInfo={{\n            date: currentMeeting.date,\n            time: currentMeeting.time,\n            location: currentMeeting.location,\n            organizer: currentMeeting.organizer.name,\n            attendees: currentMeeting.attendees\n          }}\n          onExportMinutes={handleExportMinutes}\n        />\n      )}\n      <EmailDistributionModal\n        isOpen={isEmailModalOpen}\n        onClose={handleEmailModalClose}\n        meeting={emailMeeting}\n        onSendEmail={handleSendEmail}\n      />\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}